datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Priority {
  NONE
  LOW
  MEDIUM
  HIGH
}

model Project {
  id String @id @default(cuid())
  name String
  priority Priority @default(NONE)
  startDate DateTime @default(now())
  dueDate DateTime
  tasks Task[] 
  client Client @relation(fields: [clientId], references: [id])
  clientId String
  description String?
  hourlyRate Int?
}

model Client {
  id String @id @default(cuid())
  projects Project[]
  name String 
  description String?
  phone String?
  email String? @unique
  website String? 
  businessAdress String?
}

model Task {
  id String @id @default(cuid())
  name String
  startDate DateTime @default(now())
  dueDate DateTime
  description String?
  project Project @relation(fields: [projectId], references: [id])
  projectId String 

}